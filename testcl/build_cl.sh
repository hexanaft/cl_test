#!/usr/bin/env sh
# -*- coding: utf-8 -*-

# exit when any command fails
set -e

LLVM_VERSION="14.0.6"

curdir=`pwd`

function build_rls() {
  if [ ! -d llvm-src-${LLVM_VERSION} ]; then echo No directories llvm-src-${LLVM_VERSION} !; exit 1; fi
  cd llvm-src-${LLVM_VERSION}
  ls -lh

  cmake |
    -G Ninja |
    -S "llvm-project-${LLVM_VERSION}.src\llvm" |
    -B "llvm-project-${LLVM_VERSION}.build" |
    -D CMAKE_INSTALL_PREFIX=$HOME/local/clang+llvm-${LLVM_VERSION} |
    -D CMAKE_BUILD_TYPE=Release | # MinSizeRel 
    -D BUILD_SHARED_LIBS=OFF |
    -D LLVM_USE_CRT_RELEASE=MT |
    -D LLVM_OPTIMIZED_TABLEGEN=ON |
    -D LLVM_ENABLE_PROJECTS="clang;clang-tools-extra;lld;compiler-rt;polly" |
    -D LLVM_TARGETS_TO_BUILD="AArch64;ARM;WebAssembly;X86" |
    -D LLVM_BUILD_LLVM_C_DYLIB=OFF |
    -D LLVM_ENABLE_BACKTRACES=OFF |
    -D LLVM_ENABLE_UNWIND_TABLES=OFF |
    -D LLVM_ENABLE_CRASH_OVERRIDES=OFF |
    -D LLVM_ENABLE_TERMINFO=OFF |
    -D LLVM_ENABLE_LIBXML2=OFF |
    -D LLVM_ENABLE_LIBEDIT=OFF |
    -D LLVM_ENABLE_LIBPFM=OFF |
    -D LLVM_ENABLE_ZLIB=OFF |
    -D LLVM_ENABLE_Z3_SOLVER=OFF |
    -D LLVM_ENABLE_WARNINGS=OFF |
    -D LLVM_ENABLE_PEDANTIC=OFF |
    -D LLVM_ENABLE_WERROR=OFF |
    -D LLVM_ENABLE_ASSERTIONS=OFF |
    -D LLVM_BUILD_EXAMPLES=OFF |
    -D LLVM_BUILD_TESTS=OFF |
    -D LLVM_BUILD_BENCHMARKS=OFF |
    -D LLVM_BUILD_DOCS=OFF |
    -D LLVM_INCLUDE_EXAMPLES=OFF |
    -D LLVM_INCLUDE_TESTS=OFF |
    -D LLVM_INCLUDE_BENCHMARKS=OFF |
    -D LLVM_INCLUDE_DOCS=OFF |
    -D LLVM_ENABLE_BINDINGS=OFF |
    -D LLVM_ENABLE_PLUGINS=OFF |
    -D LLVM_ENABLE_IDE=OFF |
    -D CLANG_BUILD_EXAMPLES=OFF |
    -D CLANG_INCLUDE_TESTS=OFF |
    -D CLANG_INCLUDE_DOCS=OFF |
    -D CLANG_ENABLE_ARCMT=OFF |
    -D CLANG_ENABLE_STATIC_ANALYZER=OFF |
    -D COMPILER_RT_BUILD_SANITIZERS=ON |
    -D COMPILER_RT_BUILD_LIBFUZZER=ON |
    -D COMPILER_RT_BUILD_PROFILE=ON |
    -D COMPILER_RT_BUILD_BUILTINS=OFF |
    -D COMPILER_RT_BUILD_CRT=OFF |
    -D COMPILER_RT_BUILD_XRAY=OFF |
    -D COMPILER_RT_BUILD_MEMPROF=OFF |
    -D COMPILER_RT_BUILD_XRAY_NO_PREINIT=OFF |
    -D COMPILER_RT_BUILD_ORC=OFF |
    -D COMPILER_RT_BUILD_GWP_ASAN=OFF |
    -D COMPILER_RT_ENABLE_CET=OFF |
    -D COMPILER_RT_CRT_USE_EH_FRAME_REGISTRY=OFF

  ninja -C llvm-project-${LLVM_VERSION}.build install

  cd ${curdir}
}

build_rls;
